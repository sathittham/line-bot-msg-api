AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  linelogger
  A SAM application to log LINE webhook events.

Parameters:
  LineChannelAccessToken:
    Type: String
    Description: The LINE Channel Access Token.
    NoEcho: true # This will hide the value in logs and the AWS console
  LineChannelSecret:
    Type: String
    Description: The LINE Channel Secret.
    NoEcho: true # This will hide the value in logs and the AWS console


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5 # Increased timeout slightly for potential processing
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  LineLoggerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: linelogger/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
      - arm64
      Environment:
        Variables:
          # IMPORTANT: Replace these with your actual credentials
          # For production, use AWS Secrets Manager or Parameter Store
          LINE_CHANNEL_ACCESS_TOKEN:  !Ref LineChannelAccessToken
          LINE_CHANNEL_SECRET: !Ref LineChannelSecret
      Events:
        LineWebhook: 
          Type: Api
          Properties:
            Path: /webhook # Updated path for LINE webhook
            Method: post # LINE webhooks use POST
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !GetAtt ApplicationResourceGroup.Name
      AutoConfigurationEnabled: true
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LineLoggerApi:
    Description: API Gateway endpoint URL for Prod stage for Line Logger function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/webhook"
  LineLoggerFunction:
    Description: Line Logger Lambda Function ARN
    Value: !GetAtt LineLoggerFunction.Arn
  LineLoggerFunctionIamRole:
    Description: Implicit IAM Role created for Line Logger function
    Value: !GetAtt LineLoggerFunctionRole.Arn
